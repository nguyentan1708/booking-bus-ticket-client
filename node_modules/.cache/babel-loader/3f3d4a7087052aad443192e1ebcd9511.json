{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar object = _react2.default.PropTypes.object;\n/**\n * The RouteContext mixin provides a convenient way for route\n * components to set the route in context. This is needed for\n * routes that render elements that want to use the Lifecycle\n * mixin to prevent transitions.\n */\n\nvar RouteContext = {\n  propTypes: {\n    route: object.isRequired\n  },\n  childContextTypes: {\n    route: object.isRequired\n  },\n  getChildContext: function getChildContext() {\n    return {\n      route: this.props.route\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;\n  }\n};\nexports.default = RouteContext;\nmodule.exports = exports['default'];","map":{"version":3,"names":["exports","__esModule","_routerWarning","require","_routerWarning2","_interopRequireDefault","_react","_react2","obj","default","object","PropTypes","RouteContext","propTypes","route","isRequired","childContextTypes","getChildContext","props","componentWillMount","process","env","NODE_ENV","module"],"sources":["/Users/votannguyen/Downloads/booking-bus-ticket-client/node_modules/react-router-native/node_modules/react-router/lib/RouteContext.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar object = _react2.default.PropTypes.object;\n\n/**\n * The RouteContext mixin provides a convenient way for route\n * components to set the route in context. This is needed for\n * routes that render elements that want to use the Lifecycle\n * mixin to prevent transitions.\n */\n\nvar RouteContext = {\n\n  propTypes: {\n    route: object.isRequired\n  },\n\n  childContextTypes: {\n    route: object.isRequired\n  },\n\n  getChildContext: function getChildContext() {\n    return {\n      route: this.props.route\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;\n  }\n};\n\nexports.default = RouteContext;\nmodule.exports = exports['default'];"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAIC,eAAe,GAAGC,sBAAsB,CAACH,cAAD,CAA5C;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAII,OAAO,GAAGF,sBAAsB,CAACC,MAAD,CAApC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACP,UAAX,GAAwBO,GAAxB,GAA8B;IAAEC,OAAO,EAAED;EAAX,CAArC;AAAwD;;AAE/F,IAAIE,MAAM,GAAGH,OAAO,CAACE,OAAR,CAAgBE,SAAhB,CAA0BD,MAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIE,YAAY,GAAG;EAEjBC,SAAS,EAAE;IACTC,KAAK,EAAEJ,MAAM,CAACK;EADL,CAFM;EAMjBC,iBAAiB,EAAE;IACjBF,KAAK,EAAEJ,MAAM,CAACK;EADG,CANF;EAUjBE,eAAe,EAAE,SAASA,eAAT,GAA2B;IAC1C,OAAO;MACLH,KAAK,EAAE,KAAKI,KAAL,CAAWJ;IADb,CAAP;EAGD,CAdgB;EAejBK,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;IAChDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,CAAC,GAAGlB,eAAe,CAACK,OAApB,EAA6B,KAA7B,EAAoC,6JAApC,CAAxC,GAA6O,KAAK,CAAlP;EACD;AAjBgB,CAAnB;AAoBAT,OAAO,CAACS,OAAR,GAAkBG,YAAlB;AACAW,MAAM,CAACvB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB"},"metadata":{},"sourceType":"script"}