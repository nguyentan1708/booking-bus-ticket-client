{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar _slice = Array.prototype.slice;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0,\n      isDone = false;\n  var sync = false,\n      hasNext = false,\n      doneArgs = undefined;\n\n  function done() {\n    isDone = true;\n\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      doneArgs = [].concat(_slice.call(arguments));\n      return;\n    }\n\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) {\n      return;\n    }\n\n    hasNext = true;\n\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      return;\n    }\n\n    sync = true;\n\n    while (!isDone && currentTurn < turns && hasNext) {\n      hasNext = false;\n      work.call(this, currentTurn++, next, done);\n    }\n\n    sync = false;\n\n    if (isDone) {\n      // This means the loop finished synchronously.\n      callback.apply(this, doneArgs);\n      return;\n    }\n\n    if (currentTurn >= turns && hasNext) {\n      isDone = true;\n      callback();\n    }\n  }\n\n  next();\n}","map":{"version":3,"names":["exports","__esModule","_slice","Array","prototype","slice","loopAsync","turns","work","callback","currentTurn","isDone","sync","hasNext","doneArgs","undefined","done","concat","call","arguments","apply","next"],"sources":["/Users/votannguyen/Downloads/booking-bus-ticket-client/node_modules/react-router-native/node_modules/history/lib/AsyncUtils.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nvar _slice = Array.prototype.slice;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0,\n      isDone = false;\n  var sync = false,\n      hasNext = false,\n      doneArgs = undefined;\n\n  function done() {\n    isDone = true;\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      doneArgs = [].concat(_slice.call(arguments));\n      return;\n    }\n\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) {\n      return;\n    }\n\n    hasNext = true;\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      return;\n    }\n\n    sync = true;\n\n    while (!isDone && currentTurn < turns && hasNext) {\n      hasNext = false;\n      work.call(this, currentTurn++, next, done);\n    }\n\n    sync = false;\n\n    if (isDone) {\n      // This means the loop finished synchronously.\n      callback.apply(this, doneArgs);\n      return;\n    }\n\n    if (currentTurn >= turns && hasNext) {\n      isDone = true;\n      callback();\n    }\n  }\n\n  next();\n}"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACA,IAAIC,MAAM,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAA7B;AACAL,OAAO,CAACM,SAAR,GAAoBA,SAApB;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,QAAhC,EAA0C;EACxC,IAAIC,WAAW,GAAG,CAAlB;EAAA,IACIC,MAAM,GAAG,KADb;EAEA,IAAIC,IAAI,GAAG,KAAX;EAAA,IACIC,OAAO,GAAG,KADd;EAAA,IAEIC,QAAQ,GAAGC,SAFf;;EAIA,SAASC,IAAT,GAAgB;IACdL,MAAM,GAAG,IAAT;;IACA,IAAIC,IAAJ,EAAU;MACR;MACAE,QAAQ,GAAG,GAAGG,MAAH,CAAUf,MAAM,CAACgB,IAAP,CAAYC,SAAZ,CAAV,CAAX;MACA;IACD;;IAEDV,QAAQ,CAACW,KAAT,CAAe,IAAf,EAAqBD,SAArB;EACD;;EAED,SAASE,IAAT,GAAgB;IACd,IAAIV,MAAJ,EAAY;MACV;IACD;;IAEDE,OAAO,GAAG,IAAV;;IACA,IAAID,IAAJ,EAAU;MACR;MACA;IACD;;IAEDA,IAAI,GAAG,IAAP;;IAEA,OAAO,CAACD,MAAD,IAAWD,WAAW,GAAGH,KAAzB,IAAkCM,OAAzC,EAAkD;MAChDA,OAAO,GAAG,KAAV;MACAL,IAAI,CAACU,IAAL,CAAU,IAAV,EAAgBR,WAAW,EAA3B,EAA+BW,IAA/B,EAAqCL,IAArC;IACD;;IAEDJ,IAAI,GAAG,KAAP;;IAEA,IAAID,MAAJ,EAAY;MACV;MACAF,QAAQ,CAACW,KAAT,CAAe,IAAf,EAAqBN,QAArB;MACA;IACD;;IAED,IAAIJ,WAAW,IAAIH,KAAf,IAAwBM,OAA5B,EAAqC;MACnCF,MAAM,GAAG,IAAT;MACAF,QAAQ;IACT;EACF;;EAEDY,IAAI;AACL"},"metadata":{},"sourceType":"script"}